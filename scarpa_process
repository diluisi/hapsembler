#!/usr/bin/perl

####################################
# Author: Nilgun Donmez
# Date: September 4, 2012
# Part of Scarpa package
####################################

use strict;
use Getopt::Long;

sub usage
{
	print STDERR "\nusage: scarpa_process -c <contigs> -f <reads> -i <insert size> \n\n";
	print STDERR "Part of Scarpa package. Prepares the contigs and reads for mapping.\n";
	print STDERR "<contigs> must be a fasta file. \n";
	print STDERR "<reads> must be a fastq file and it must contain each read pair consecutively. \n";
	print STDERR "<insert size> is the estimated insert size for the library in base pairs. \n";
	print STDERR "For more information see the README file included with the package. \n\n";
	exit(0);
}

if($#ARGV < 7)
{	&usage; }

my $contigfile;
my @fastqfiles;
my @libraries;
my $hlp = 0;
my $result = GetOptions("contigs|c=s" => \$contigfile,
						"fastq|f=s" => \@fastqfiles,
						"info|i=i" => \@libraries,
						"help|h" => \$hlp);


unless($result) { &usage; }
if($hlp) { &usage; }

my $num = 1;
my $outfile = $contigfile.".scarpa.fa";
open(INFH, "<$contigfile") || die "Can not open: $contigfile \n";
open(OUTFH, ">$outfile" ) || die "Can not open: $outfile \n";
while(<INFH>)
{
	if(/^>/)
	{
		print OUTFH ">contig_", $num, "\n";
		$num += 1;
	}
	else
	{	print OUTFH $_;	}
}
close(INFH);
close(OUTFH);

my $readfile;
$num = 1;
my $lib = 0;
my $infofile = $contigfile.".scarpa.info";
open(FH, ">$infofile") || die "Can not open: $infofile \n";
foreach $readfile (@fastqfiles)
{
	$outfile = $readfile.".scarpa.fq";
	open(INFH, "<$readfile") || die "Can not open: $readfile \n";
	open(OUTFH, ">$outfile" ) || die "Can not open: $outfile \n";

	print FH "$num ";
	my $ln = 0;
	while(<INFH>)
	{
		$ln++;
		if($ln eq 1)
		{	print OUTFH "@", $num, "\n";	$num++;	}
		elsif($ln eq 3)
		{	print OUTFH "+\n";	}
		else
		{	print OUTFH $_;	}

		if($ln eq 4)
		{	$ln = 0;	}
	}
	my $mean = $libraries[$lib++];
	my $dev = int(0.1 * $mean);
	my $end = $num - 1;

	if($end%2==1) { die "ERROR: An odd number of reads found in file: $readfile. Aborting..."; }

	print FH "$end $mean $dev 1\n";
	close(INFH);
	close(OUTFH);
}
close(FH);
